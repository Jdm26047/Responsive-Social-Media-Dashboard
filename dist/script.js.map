{"version":3,"sources":["script.js"],"names":["console","log","darkButton","document","getElementById","lightButton","setDarkMode","querySelector","classList","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","e","addEventListener","checked"],"mappings":"AAAA,aAAAA,QAAQC,IAAI,SAcZ,IAAIC,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAGtCE,YAAc,WACdH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,OACtC,EAGIC,aAAe,WACfR,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,QACtC,EAGIE,0BAA4B,WAC5B,OAAOH,aAAaI,QAAQ,YAChC,EAGIC,yBAA2B,WAC3B,OAAOC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,OAChF,EAGIC,mBAAqB,WACjB,SAAWN,6BAA+BE,4BAC1CZ,WAAWiB,QAEXd,YAAYc,OAEpB,EAGIC,aAAejB,SAASkB,iBAAiB,0BAG7CD,aAAaE,SAAQ,SAASC,GAC1BA,EAAEC,iBAAiB,SAAS,SAASD,GACjCrB,WAAWuB,QAAUnB,cAAgBK,cACzC,GACJ,IAGAI,OAAOC,WAAW,gCAAgCQ,iBAAiB,UAAU,SAASD,GAClFA,EAAEN,QAAUf,WAAWiB,QAAUd,YAAYc,OACjD,IAGAD","file":"script.js","sourcesContent":["console.log('Hello') ;\r\n\r\n/* \r\nThe first time the page is loaded, the color mode set on the preference \r\nis used and set as 'default' in the local storage. \r\nChanging the default preferences works the same way as changing the \r\ncolor mode using the buttons, if the page is loaded.\r\nWhen the page is reloaded, whatever is the value set on the local storage\r\nhas precedence over the values in the preference. If the preference\r\nchanged after the page was visited - and the page is not loaded - \r\nthe last value saved on the local storage is loaded. \r\n*/\r\n\r\n// Retrieve the dark and light mode buttons from the DOM\r\nvar darkButton = document.getElementById(\"dark\"),\r\n    lightButton = document.getElementById(\"light\");\r\n\r\n// Function to set dark mode\r\nvar setDarkMode = function() {\r\n    document.querySelector(\"body\").classList = \"dark\"; // Apply dark class to body\r\n    localStorage.setItem(\"colorMode\", \"dark\"); // Store preference in local storage\r\n};\r\n\r\n// Function to set light mode\r\nvar setLightMode = function() {\r\n    document.querySelector(\"body\").classList = \"light\"; // Apply light class to body\r\n    localStorage.setItem(\"colorMode\", \"light\"); // Store preference in local storage\r\n};\r\n\r\n// Function to get color mode from local storage\r\nvar colorModeFromLocalStorage = function() {\r\n    return localStorage.getItem(\"colorMode\");\r\n};\r\n\r\n// Function to get color mode from user preferences\r\nvar colorModeFromPreferences = function() {\r\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\r\n};\r\n\r\n// Function to load and update color mode based on stored preference or system preference\r\nvar loadAndUpdateColor = function() {\r\n    if (\"dark\" == (colorModeFromLocalStorage() || colorModeFromPreferences())) {\r\n        darkButton.click(); // Simulate click on dark button\r\n    } else {\r\n        lightButton.click(); // Simulate click on light button\r\n    }\r\n};\r\n\r\n// Select all radio buttons for toggling\r\nvar radioButtons = document.querySelectorAll(\".toggle__wrapper input\");\r\n\r\n// Add event listeners to each radio button\r\nradioButtons.forEach(function(e) {\r\n    e.addEventListener(\"click\", function(e) {\r\n        darkButton.checked ? setDarkMode() : setLightMode(); // Set mode based on button state\r\n    });\r\n});\r\n\r\n// Listen for changes in the user's color scheme preference\r\nwindow.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", function(e) {\r\n    e.matches ? darkButton.click() : lightButton.click(); // Update mode based on preference change\r\n});\r\n\r\n// Load and update the color mode on page load\r\nloadAndUpdateColor();\r\n"]}