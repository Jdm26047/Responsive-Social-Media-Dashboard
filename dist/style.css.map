{"version":3,"sources":["globals/colors.scss","globals/fonts.scss","style.css","globals/boilerplate.scss","globals/typography.scss","util/breakpoints.scss","globals/layout.scss","components/header.scss","components/toggle.scss","components/card.scss"],"names":[],"mappings":"AAAA,MACC,mBAAA,CACA,mBAAA,CACA,kBAAA,CACA,iBAAA,CACA,yBAAA,CACA,uBAAA,CACA,iBAAA,CACD,yBAAA,CACA,uBAAA,CACA,gBAAA,CACC,iBAAA,CACA,qBAAA,CACA,sBAAA,CACA,oBAAA,CACA,iBAAA,CACA,eAAA,CACA,sBAAA,CACA,uBAAA,CACA,qBAAA,CACA,qBAAA,CCnBG,+BCqBJ,CCtBA,KAEI,qBAAA,CADA,cDoCJ,CC9BA,iBAGI,kBDiCJ,CC9BA,KAII,yBAAA,CACA,uBAAA,CAFA,6BAAA,CAFA,QAAA,CACA,SDoCJ,CEjDA,SAIE,eAAA,CADE,YFmGJ,CE/FA,GACE,gBAAA,CACD,sBFkGD,CG9EC,4BDtBD,GAIG,iBFoGD,CACF,CEjGA,qBAGI,oBFoGJ,CItHA,WAGI,sBAAA,CADA,mBAAA,CADA,mBJ2HJ,CG/FC,4BC7BD,WAMQ,SJ0HN,CACF,CKjIA,QACI,kBLoIJ,CGxGC,wBE7BD,QAKQ,kBAAA,CAFA,YAAA,CACA,6BLuIN,CACF,CKnII,kBAGD,uBAAA,CAFA,iBAAA,CACA,eLsIH,CMnIA,QAIC,WAAA,CAHA,YAAA,CACA,qCAAA,CACA,gCNwID,CMpIE,wBACC,eAAA,CACA,gBNsIH,CMpIG,0BACA,eAAA,CACA,YAAA,CACA,mBNsIH,CMpIG,yBACA,eNsIH,CMlIE,iBACA,eAAA,CACA,YAAA,CACA,aAAA,CACA,iBNoIF,CMlIE,0BAIC,aAAA,CAFA,iBAAA,CADA,SAAA,CAEA,iBAAA,CAEA,aAAA,CACA,SNoIH,CM5HC,oBAOC,sFAAA,CADA,oBAAA,CALA,aAAA,CACA,WAAA,CACA,iBAAA,CAEA,KAAA,CADA,UNiIF,CMvHE,gBAQE,+BAAA,CADA,iBAAA,CADA,eAAA,CAJF,aAAA,CADA,iBAAA,CAGA,UAAA,CADA,YAAA,CAMA,+BAAA,CAJE,cN6HJ,CMtHC,uCACC,sBAAA,CACA,SNwHF,CMrHC,wCACC,QAAA,CACA,UAAA,CACA,yBNuHF,CO1MA,MACI,eP+MJ","file":"style.css","sourcesContent":[":root{\r\n --limegreen: hsl(163, 72%, 41%);\r\n --brightred: hsl(356, 69%, 56%);\r\n --facebook: hsl(208, 92%, 53%);\r\n --twitter: hsl(203, 89%, 53%);\r\n --instagram-start: hsl(37, 97%, 70%); \r\n --instagram-end: hsl(329, 70%, 58%);\r\n --youtube: hsl(348, 97%, 39%);\r\n--toggle-bg-start: hsl(210, 78%, 56%);\r\n--toggle-bg-end: hsl(146, 68%, 55%);\r\n--toggle: hsl(230, 22%, 74%);\r\n --dark-bg: hsl(230, 17%, 14%);\r\n --dark-top-bg: hsl(232, 19%, 15%);\r\n --dark-card-bg :hsl(228, 28%, 20%);\r\n --dark-text1: hsl(228, 34%, 66%);\r\n --dark-text2: hsl(0, 0%, 100%);\r\n --light-bg:  hsl(0, 0%, 100%);\r\n --light-top-bg: hsl(225, 100%, 98%);\r\n --light-card-bg: hsl(227, 47%, 96%);\r\n --light-text1: hsl(228, 12%, 44%);\r\n --light-text2: hsl(230, 17%, 14%);\r\n\r\n}\r\n\r\n// Gradient - https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient\r\n\r\n// need colors to be @forward into MAIN file \r\n\r\n\r\n \r\n// - Lime Green: hsl(163, 72%, 41%)\r\n// - Bright Red: hsl(356, 69%, 56%)\r\n\r\n// - Facebook: hsl(208, 92%, 53%)\r\n// - Twitter: hsl(203, 89%, 53%)\r\n// - Instagram: linear gradient hsl(37, 97%, 70%) to hsl(329, 70%, 58%)\r\n// - YouTube: hsl(348, 97%, 39%)\r\n\r\n//  Dark Theme\r\n\r\n// - Toggle: linear gradient hsl(210, 78%, 56%) to hsl(146, 68%, 55%)\r\n\r\n//  Light Theme\r\n\r\n// - Toggle: hsl(230, 22%, 74%)\r\n\r\n//  Neutral\r\n\r\n//  Dark Theme\r\n\r\n// - Very Dark Blue (BG): hsl(230, 17%, 14%);\r\n// - Very Dark Blue (Top BG Pattern): hsl(232, 19%, 15%);\r\n// - Dark Desaturated Blue (Card BG): hsl(228, 28%, 20%);\r\n// - Desaturated Blue (Text): hsl(228, 34%, 66%);\r\n// - White (Text): hsl(0, 0%, 100%);\r\n\r\n//  Light Theme\r\n\r\n// - White (BG): hsl(0, 0%, 100%);\r\n// - Very Pale Blue (Top BG Pattern): hsl(225, 100%, 98%);\r\n// - Light Grayish Blue (Card BG): hsl(227, 47%, 96%);\r\n// - Dark Grayish Blue (Text): hsl(228, 12%, 44%);\r\n// - Very Dark Blue (Text): hsl(230, 17%, 14%);\r\n\r\n",":root{\r\n    --font-inter: 'Inter', sans-serif;\r\n}\r\n\r\n/* How this CSS variable is called\r\n   \r\nbody{\r\n    font-family: var(--font-inter);\r\n}\r\n    */\r\n\r\n//  Typography\r\n\r\n// Body Copy\r\n\r\n// - Font size (Overview Card Headings): 14px\r\n\r\n//  Font\r\n\r\n// - Family: [Inter](https://fonts.google.com/specimen/Inter)\r\n// - Weights: 400, 700","@charset \"UTF-8\";\n:root {\n  --limegreen: hsl(163, 72%, 41%);\n  --brightred: hsl(356, 69%, 56%);\n  --facebook: hsl(208, 92%, 53%);\n  --twitter: hsl(203, 89%, 53%);\n  --instagram-start: hsl(37, 97%, 70%);\n  --instagram-end: hsl(329, 70%, 58%);\n  --youtube: hsl(348, 97%, 39%);\n  --toggle-bg-start: hsl(210, 78%, 56%);\n  --toggle-bg-end: hsl(146, 68%, 55%);\n  --toggle: hsl(230, 22%, 74%);\n  --dark-bg: hsl(230, 17%, 14%);\n  --dark-top-bg: hsl(232, 19%, 15%);\n  --dark-card-bg:hsl(228, 28%, 20%);\n  --dark-text1: hsl(228, 34%, 66%);\n  --dark-text2: hsl(0, 0%, 100%);\n  --light-bg: hsl(0, 0%, 100%);\n  --light-top-bg: hsl(225, 100%, 98%);\n  --light-card-bg: hsl(227, 47%, 96%);\n  --light-text1: hsl(228, 12%, 44%);\n  --light-text2: hsl(230, 17%, 14%);\n}\n\n:root {\n  --font-inter: \"Inter\", sans-serif;\n}\n\n/* How this CSS variable is called\n\nbody{\n    font-family: var(--font-inter);\n}\n    */\nhtml {\n  font-size: 100%;\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: var(--font-inter);\n  background: var(--dark-bg);\n  color: var(--dark-text2);\n}\n\n/*\n    h1 {\n    @include breakpoint(large) {\n            font-size: 3rem;\n    }\n}\n\n// in just CSS it looks like\n    @media (min-width: 87.5em) {\n    h1 {\n            font-size: 3rem;\n    }\n}\n    */\n/*\n@use \"sass:math\";\n\n// Source: https://css-tricks.com/snippets/sass/px-to-em-functions/\n@function rem($pixels, $context: 16) {\n\t@return (math.div($pixels, $context)) * 1rem;\n}\npor example\n…an em is equal to the size of the font that applies to the parent of the element in question.\n If you haven’t set the font size anywhere on the page,\n then it is the browser default, \nwhich is probably 16px.\nSo by default 1em = 16px, and 2em = 32px.\n\nIf you still prefer to think in px, \nbut like the benefits of em, \nno need have your calculator handy, \nyou can let Sass do the work for you. \nThere are a variety of ways to calculate ems with Sass.\n\nInline math:\n\nh1 {\n  font-size: (32 / 16) * 1em;\n}\n\nResult:\n\nh1 {\n  font-size: 2em;\n}\n*/\nh1,\nh2,\nh3 {\n  margin-top: 0;\n  line-height: 1.1;\n}\n\nh1 {\n  font-size: 1.5rem;\n  margin-bottom: 0.1875rem;\n}\n@media (min-width: 71.875em) {\n  h1 {\n    font-size: 1.75rem;\n  }\n}\n\na,\na:visited,\na:active {\n  text-decoration: none;\n}\n\n.container {\n  padding: 0 1.5625rem;\n  max-width: 69.375rem;\n  margin: 0 auto 2.875rem;\n}\n@media (min-width: 71.875em) {\n  .container {\n    padding: 0;\n  }\n}\n\n.header {\n  margin-top: 2.25rem;\n}\n@media (min-width: 40em) {\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n}\n.header__subtitle {\n  font-size: 0.875rem;\n  font-weight: 700;\n  color: var(--dark-text1);\n}\n/* this rule is needed here as well,\nto use the rem()styles*/\n.toggle {\n  display: grid;\n  grid-template-columns: 1fr 3.75rem 1fr;\n  grid-template-rows: repeat(3, 1fr);\n  border: none;\n}\n.toggle label[for=dark] {\n  grid: column 1/2;\n  justify-self: end;\n}\n.toggle label[for=system] {\n  grid-column: 1/4;\n  grid-row: 2/3;\n  justify-self: center;\n}\n.toggle label[for=light] {\n  grid-column: 3/4;\n}\n.toggle__wrapper {\n  grid-column: 2/3;\n  grid-row: 1/2;\n  height: 1.5rem;\n  position: relative;\n}\n.toggle input[type=radio] {\n  opacity: 0;\n  margin: 0 -0.125rem 0 -0.125rem;\n  position: relative;\n  height: 1.5rem;\n  width: 1.25rem;\n  z-index: 1;\n}\n.toggle__background {\n  display: block;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  border-radius: 0.75rem;\n  background: linear-gradient(225deg, var(--toggle-bg-end) 0%, var(--toggle-bg-start) 98.2%);\n}\n.toggle__button {\n  position: absolute;\n  left: 0.1875rem;\n  top: 0.1875rem;\n  right: 100%;\n  width: 1.125rem;\n  height: 1.125rem;\n  border-radius: 50%;\n  background-color: var(--dark-bg);\n  transition: all 150ms ease-in-out;\n}\n.toggle #light:checked ~ .toggle__button {\n  left: calc(100% - 21px);\n  right: 3px;\n}\n.toggle #system:checked ~ .toggle__button {\n  left: 50%;\n  right: auto;\n  transform: translate(-50%);\n}\n\n/*to use rem() styles here, \nneed to @use util styles*/\n.card {\n  padding: 1.25rem;\n}\n\n/* not using @use to call utils folder, \nbecause of the use of sass mixins and \nfunctions var used */","html {\r\n    font-size: 100%;\r\n    box-sizing: border-box;\r\n}\r\n\r\n// ensures padding is included in the total width. not in addition too.\r\n// content-box is another option\r\n*, \r\n*::before, \r\n*::after {\r\n    box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: var(--font-inter);\r\n    background: var(--dark-bg);\r\n    color: var(--dark-text2);\r\n}","@use '../util' as *;\r\n\r\nh1,\r\nh2,\r\nh3 {\r\n    margin-top: 0;\r\n\t\tline-height: 1.1;\r\n}\r\n\r\nh1 {\r\n  font-size: rem(24);\r\n\tmargin-bottom: rem(3);\r\n  @include breakpoint(large) {\r\n  \tfont-size: rem(28);\r\n  }\r\n}\r\n\r\na,\r\na:visited,\r\na:active {\r\n    text-decoration: none;\r\n}","//faster way to load in media queries, Using  @mixin\r\n//starts with @mixin breakpoint\r\n//Has Parameter kinda like a function, used to load simple styles \r\n// easier to update for future because uses single vs numerous iterations of (sizes) i.e\r\n// @mixin loads reusable code you want to use multiple times in code base\r\n// @mixin wont generate any CSS on its own, its a SASS thing\r\n\r\n//map-get is like an array, object\r\n//px divided by 16 = em\r\n\r\n// 640px, 1150px, 1400px\r\n// 640px, 950px, 1400px\r\n// 640px, 1110x, 1400px\r\n\r\n$breakpoints-up: (\r\n\t'medium': '40em',\r\n\t'large': '71.875em',\r\n\t'xlarge': '87.5em',\r\n);\r\n\r\n// 639px, 1149px, 1399px\r\n// 639px, 1149px, 1399px\r\n// 640px, 949px, 1400px\r\n\r\n$breakpoints-down: (\r\n\t'small': '39.9375em',\r\n\t'medium': '71.8125em',\r\n\t'large': '87.4375em',\r\n);\r\n\r\n@mixin breakpoint($size) {\r\n\t@media (min-width: map-get($breakpoints-up, $size)) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin breakpoint-down($size) {\r\n\t@media (max-width: map-get($breakpoints-down, $size)) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n//Example\r\n// in SCSS a mixin looks like\r\n/*\r\n    h1 {\r\n    @include breakpoint(large) {\r\n            font-size: 3rem;\r\n    }\r\n}\r\n\r\n// in just CSS it looks like\r\n    @media (min-width: 87.5em) {\r\n    h1 {\r\n            font-size: 3rem;\r\n    }\r\n}\r\n    */\r\n\t// https://webhint.io/docs/user-guide/hints/hint-disown-opener/\r\n\t// https://sass-lang.com/documentation/breaking-changes/import/\r\n\t// https://sowft.com/blog/fixing-global-built-in-functions-are-deprecated-error-in-dart-sass/\r\n","@use '../util' as *;\r\n\r\n.container {\r\n    padding: 0 rem(25);\r\n    max-width: rem(1110);\r\n    margin: 0 auto rem(46);\r\n    \r\n    @include breakpoint(large) {\r\n        padding: 0;\r\n    }\r\n}","@use '../util' as *;\r\n\r\n.header {\r\n    margin-top: rem(36);\r\n    @include breakpoint(medium) {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    &__title {\r\n    }\r\n    &__subtitle {\r\n\t\t\tfont-size: rem(14);\r\n\t\t\tfont-weight: 700;\r\n\t\t\tcolor: var(--dark-text1);\r\n    }\r\n\r\n    &__toggle {\r\n    }\r\n}","\r\n@use '../util' as *;\r\n/* this rule is needed here as well,\r\nto use the rem()styles*/\r\n\r\n// https://codepen.io/SaraSoueidan/pen/jpBbrq/?editors=1100\r\n// Toggle Code Source\r\n\r\n// & means inherit from parent \r\n// .toggle is the parent of this container \r\n// __wrapper \r\n// __background\r\n// __button are ALL its children\r\n\r\n\r\n\r\n.toggle { \r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr rem(60) 1fr;\r\n\tgrid-template-rows: repeat(3, 1fr);\r\n\tborder: none;\r\n\t\r\n\tlabel {\r\n\t\t&[for='dark'] {\r\n\t\t\tgrid: column 1 / 2;\r\n\t\t\tjustify-self: end;\r\n\t\t}\r\n\t  &[for='system'] {\r\n\t\t\tgrid-column: 1 / 4;\r\n\t\t\tgrid-row: 2 / 3;\r\n\t\t\tjustify-self: center;\r\n\t\t}\r\n\t  &[for='light'] {\r\n\t\t\tgrid-column: 3 / 4;\r\n\t\t}\r\n\t}    \r\n\r\n  &__wrapper {\r\n\t\tgrid-column: 2 / 3;\r\n\t\tgrid-row: 1 / 2;\r\n\t\theight:rem(24);\r\n\t\tposition: relative;\r\n  }\r\n  input[type=\"radio\"]\t{\r\n\t\t\topacity: 0;\r\n\t\t\tmargin: 0 rem(-2) 0 rem(-2);\r\n\t\t\tposition: relative;\r\n\t\t\theight: rem(24);\r\n\t\t\twidth: rem(20);\r\n\t\t\tz-index: 1;\r\n\t\t\t// cursor: pointer;\r\n\t\t\t\r\n\t\t\t// &:focus ~ .toggle__button {\r\n\t\t\t// \tborder: 2px solid white;\r\n\t}\r\n  \r\n\r\n\t&__background {\r\n\t\tdisplay:block;\r\n\t\theight: 100%;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\ttop: 0;\r\n\t\tborder-radius: rem(12);\r\n\t\tbackground: linear-gradient(\r\n\t\t\t225deg,\r\n\t\t\tvar(--toggle-bg-end) 0%,\r\n\t\t\tvar(--toggle-bg-start) 98.2%\r\n\t\t);\r\n  }\r\n\r\n  &__button {\r\n\t\tposition: absolute;\r\n\t\tleft: rem(3);\r\n\t\ttop: rem(3);\r\n\t\tright: 100%;\r\n    width: rem(18);\r\n    height: rem(18);\r\n    border-radius: 50%;\r\n    background-color: var(--dark-bg);\r\n\t\ttransition: all 150ms ease-in-out;\r\n  }\r\n\t\r\n\t#light:checked ~ .toggle__button {\r\n\t\tleft: calc(100% - 21px);\r\n\t\tright: 3px;\t\r\n\t}\r\n\r\n\t#system:checked ~ .toggle__button {\r\n\t\tleft: 50%;\r\n\t\tright: auto;\r\n\t\ttransform: translate(-50%);\r\n\t}\r\n}\r\n   \r\n    ","// test styles\r\n\r\n/*to use rem() styles here, \r\nneed to @use util styles*/\r\n\r\n@use '../util' as *;\r\n// namespacing ??\r\n\r\n.card {\r\n    padding: rem(20);\r\n}"]}